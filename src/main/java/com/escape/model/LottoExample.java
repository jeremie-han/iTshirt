package com.escape.model;

import java.util.ArrayList;
import java.util.List;

public class LottoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lotto
     *
     * @mbggenerated Fri Jul 12 15:54:40 KST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lotto
     *
     * @mbggenerated Fri Jul 12 15:54:40 KST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lotto
     *
     * @mbggenerated Fri Jul 12 15:54:40 KST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lotto
     *
     * @mbggenerated Fri Jul 12 15:54:40 KST 2019
     */
    public LottoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lotto
     *
     * @mbggenerated Fri Jul 12 15:54:40 KST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lotto
     *
     * @mbggenerated Fri Jul 12 15:54:40 KST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lotto
     *
     * @mbggenerated Fri Jul 12 15:54:40 KST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lotto
     *
     * @mbggenerated Fri Jul 12 15:54:40 KST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lotto
     *
     * @mbggenerated Fri Jul 12 15:54:40 KST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lotto
     *
     * @mbggenerated Fri Jul 12 15:54:40 KST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lotto
     *
     * @mbggenerated Fri Jul 12 15:54:40 KST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lotto
     *
     * @mbggenerated Fri Jul 12 15:54:40 KST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lotto
     *
     * @mbggenerated Fri Jul 12 15:54:40 KST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lotto
     *
     * @mbggenerated Fri Jul 12 15:54:40 KST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lotto
     *
     * @mbggenerated Fri Jul 12 15:54:40 KST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andRoundIsNull() {
            addCriterion("ROUND is null");
            return (Criteria) this;
        }

        public Criteria andRoundIsNotNull() {
            addCriterion("ROUND is not null");
            return (Criteria) this;
        }

        public Criteria andRoundEqualTo(Integer value) {
            addCriterion("ROUND =", value, "round");
            return (Criteria) this;
        }

        public Criteria andRoundNotEqualTo(Integer value) {
            addCriterion("ROUND <>", value, "round");
            return (Criteria) this;
        }

        public Criteria andRoundGreaterThan(Integer value) {
            addCriterion("ROUND >", value, "round");
            return (Criteria) this;
        }

        public Criteria andRoundGreaterThanOrEqualTo(Integer value) {
            addCriterion("ROUND >=", value, "round");
            return (Criteria) this;
        }

        public Criteria andRoundLessThan(Integer value) {
            addCriterion("ROUND <", value, "round");
            return (Criteria) this;
        }

        public Criteria andRoundLessThanOrEqualTo(Integer value) {
            addCriterion("ROUND <=", value, "round");
            return (Criteria) this;
        }

        public Criteria andRoundIn(List<Integer> values) {
            addCriterion("ROUND in", values, "round");
            return (Criteria) this;
        }

        public Criteria andRoundNotIn(List<Integer> values) {
            addCriterion("ROUND not in", values, "round");
            return (Criteria) this;
        }

        public Criteria andRoundBetween(Integer value1, Integer value2) {
            addCriterion("ROUND between", value1, value2, "round");
            return (Criteria) this;
        }

        public Criteria andRoundNotBetween(Integer value1, Integer value2) {
            addCriterion("ROUND not between", value1, value2, "round");
            return (Criteria) this;
        }

        public Criteria andLotteryDayIsNull() {
            addCriterion("LOTTERY_DAY is null");
            return (Criteria) this;
        }

        public Criteria andLotteryDayIsNotNull() {
            addCriterion("LOTTERY_DAY is not null");
            return (Criteria) this;
        }

        public Criteria andLotteryDayEqualTo(String value) {
            addCriterion("LOTTERY_DAY =", value, "lotteryDay");
            return (Criteria) this;
        }

        public Criteria andLotteryDayNotEqualTo(String value) {
            addCriterion("LOTTERY_DAY <>", value, "lotteryDay");
            return (Criteria) this;
        }

        public Criteria andLotteryDayGreaterThan(String value) {
            addCriterion("LOTTERY_DAY >", value, "lotteryDay");
            return (Criteria) this;
        }

        public Criteria andLotteryDayGreaterThanOrEqualTo(String value) {
            addCriterion("LOTTERY_DAY >=", value, "lotteryDay");
            return (Criteria) this;
        }

        public Criteria andLotteryDayLessThan(String value) {
            addCriterion("LOTTERY_DAY <", value, "lotteryDay");
            return (Criteria) this;
        }

        public Criteria andLotteryDayLessThanOrEqualTo(String value) {
            addCriterion("LOTTERY_DAY <=", value, "lotteryDay");
            return (Criteria) this;
        }

        public Criteria andLotteryDayLike(String value) {
            addCriterion("LOTTERY_DAY like", value, "lotteryDay");
            return (Criteria) this;
        }

        public Criteria andLotteryDayNotLike(String value) {
            addCriterion("LOTTERY_DAY not like", value, "lotteryDay");
            return (Criteria) this;
        }

        public Criteria andLotteryDayIn(List<String> values) {
            addCriterion("LOTTERY_DAY in", values, "lotteryDay");
            return (Criteria) this;
        }

        public Criteria andLotteryDayNotIn(List<String> values) {
            addCriterion("LOTTERY_DAY not in", values, "lotteryDay");
            return (Criteria) this;
        }

        public Criteria andLotteryDayBetween(String value1, String value2) {
            addCriterion("LOTTERY_DAY between", value1, value2, "lotteryDay");
            return (Criteria) this;
        }

        public Criteria andLotteryDayNotBetween(String value1, String value2) {
            addCriterion("LOTTERY_DAY not between", value1, value2, "lotteryDay");
            return (Criteria) this;
        }

        public Criteria andWinNum1IsNull() {
            addCriterion("WIN_NUM1 is null");
            return (Criteria) this;
        }

        public Criteria andWinNum1IsNotNull() {
            addCriterion("WIN_NUM1 is not null");
            return (Criteria) this;
        }

        public Criteria andWinNum1EqualTo(Integer value) {
            addCriterion("WIN_NUM1 =", value, "winNum1");
            return (Criteria) this;
        }

        public Criteria andWinNum1NotEqualTo(Integer value) {
            addCriterion("WIN_NUM1 <>", value, "winNum1");
            return (Criteria) this;
        }

        public Criteria andWinNum1GreaterThan(Integer value) {
            addCriterion("WIN_NUM1 >", value, "winNum1");
            return (Criteria) this;
        }

        public Criteria andWinNum1GreaterThanOrEqualTo(Integer value) {
            addCriterion("WIN_NUM1 >=", value, "winNum1");
            return (Criteria) this;
        }

        public Criteria andWinNum1LessThan(Integer value) {
            addCriterion("WIN_NUM1 <", value, "winNum1");
            return (Criteria) this;
        }

        public Criteria andWinNum1LessThanOrEqualTo(Integer value) {
            addCriterion("WIN_NUM1 <=", value, "winNum1");
            return (Criteria) this;
        }

        public Criteria andWinNum1In(List<Integer> values) {
            addCriterion("WIN_NUM1 in", values, "winNum1");
            return (Criteria) this;
        }

        public Criteria andWinNum1NotIn(List<Integer> values) {
            addCriterion("WIN_NUM1 not in", values, "winNum1");
            return (Criteria) this;
        }

        public Criteria andWinNum1Between(Integer value1, Integer value2) {
            addCriterion("WIN_NUM1 between", value1, value2, "winNum1");
            return (Criteria) this;
        }

        public Criteria andWinNum1NotBetween(Integer value1, Integer value2) {
            addCriterion("WIN_NUM1 not between", value1, value2, "winNum1");
            return (Criteria) this;
        }

        public Criteria andWinNum2IsNull() {
            addCriterion("WIN_NUM2 is null");
            return (Criteria) this;
        }

        public Criteria andWinNum2IsNotNull() {
            addCriterion("WIN_NUM2 is not null");
            return (Criteria) this;
        }

        public Criteria andWinNum2EqualTo(Integer value) {
            addCriterion("WIN_NUM2 =", value, "winNum2");
            return (Criteria) this;
        }

        public Criteria andWinNum2NotEqualTo(Integer value) {
            addCriterion("WIN_NUM2 <>", value, "winNum2");
            return (Criteria) this;
        }

        public Criteria andWinNum2GreaterThan(Integer value) {
            addCriterion("WIN_NUM2 >", value, "winNum2");
            return (Criteria) this;
        }

        public Criteria andWinNum2GreaterThanOrEqualTo(Integer value) {
            addCriterion("WIN_NUM2 >=", value, "winNum2");
            return (Criteria) this;
        }

        public Criteria andWinNum2LessThan(Integer value) {
            addCriterion("WIN_NUM2 <", value, "winNum2");
            return (Criteria) this;
        }

        public Criteria andWinNum2LessThanOrEqualTo(Integer value) {
            addCriterion("WIN_NUM2 <=", value, "winNum2");
            return (Criteria) this;
        }

        public Criteria andWinNum2In(List<Integer> values) {
            addCriterion("WIN_NUM2 in", values, "winNum2");
            return (Criteria) this;
        }

        public Criteria andWinNum2NotIn(List<Integer> values) {
            addCriterion("WIN_NUM2 not in", values, "winNum2");
            return (Criteria) this;
        }

        public Criteria andWinNum2Between(Integer value1, Integer value2) {
            addCriterion("WIN_NUM2 between", value1, value2, "winNum2");
            return (Criteria) this;
        }

        public Criteria andWinNum2NotBetween(Integer value1, Integer value2) {
            addCriterion("WIN_NUM2 not between", value1, value2, "winNum2");
            return (Criteria) this;
        }

        public Criteria andWinNum3IsNull() {
            addCriterion("WIN_NUM3 is null");
            return (Criteria) this;
        }

        public Criteria andWinNum3IsNotNull() {
            addCriterion("WIN_NUM3 is not null");
            return (Criteria) this;
        }

        public Criteria andWinNum3EqualTo(Integer value) {
            addCriterion("WIN_NUM3 =", value, "winNum3");
            return (Criteria) this;
        }

        public Criteria andWinNum3NotEqualTo(Integer value) {
            addCriterion("WIN_NUM3 <>", value, "winNum3");
            return (Criteria) this;
        }

        public Criteria andWinNum3GreaterThan(Integer value) {
            addCriterion("WIN_NUM3 >", value, "winNum3");
            return (Criteria) this;
        }

        public Criteria andWinNum3GreaterThanOrEqualTo(Integer value) {
            addCriterion("WIN_NUM3 >=", value, "winNum3");
            return (Criteria) this;
        }

        public Criteria andWinNum3LessThan(Integer value) {
            addCriterion("WIN_NUM3 <", value, "winNum3");
            return (Criteria) this;
        }

        public Criteria andWinNum3LessThanOrEqualTo(Integer value) {
            addCriterion("WIN_NUM3 <=", value, "winNum3");
            return (Criteria) this;
        }

        public Criteria andWinNum3In(List<Integer> values) {
            addCriterion("WIN_NUM3 in", values, "winNum3");
            return (Criteria) this;
        }

        public Criteria andWinNum3NotIn(List<Integer> values) {
            addCriterion("WIN_NUM3 not in", values, "winNum3");
            return (Criteria) this;
        }

        public Criteria andWinNum3Between(Integer value1, Integer value2) {
            addCriterion("WIN_NUM3 between", value1, value2, "winNum3");
            return (Criteria) this;
        }

        public Criteria andWinNum3NotBetween(Integer value1, Integer value2) {
            addCriterion("WIN_NUM3 not between", value1, value2, "winNum3");
            return (Criteria) this;
        }

        public Criteria andWinNum4IsNull() {
            addCriterion("WIN_NUM4 is null");
            return (Criteria) this;
        }

        public Criteria andWinNum4IsNotNull() {
            addCriterion("WIN_NUM4 is not null");
            return (Criteria) this;
        }

        public Criteria andWinNum4EqualTo(Integer value) {
            addCriterion("WIN_NUM4 =", value, "winNum4");
            return (Criteria) this;
        }

        public Criteria andWinNum4NotEqualTo(Integer value) {
            addCriterion("WIN_NUM4 <>", value, "winNum4");
            return (Criteria) this;
        }

        public Criteria andWinNum4GreaterThan(Integer value) {
            addCriterion("WIN_NUM4 >", value, "winNum4");
            return (Criteria) this;
        }

        public Criteria andWinNum4GreaterThanOrEqualTo(Integer value) {
            addCriterion("WIN_NUM4 >=", value, "winNum4");
            return (Criteria) this;
        }

        public Criteria andWinNum4LessThan(Integer value) {
            addCriterion("WIN_NUM4 <", value, "winNum4");
            return (Criteria) this;
        }

        public Criteria andWinNum4LessThanOrEqualTo(Integer value) {
            addCriterion("WIN_NUM4 <=", value, "winNum4");
            return (Criteria) this;
        }

        public Criteria andWinNum4In(List<Integer> values) {
            addCriterion("WIN_NUM4 in", values, "winNum4");
            return (Criteria) this;
        }

        public Criteria andWinNum4NotIn(List<Integer> values) {
            addCriterion("WIN_NUM4 not in", values, "winNum4");
            return (Criteria) this;
        }

        public Criteria andWinNum4Between(Integer value1, Integer value2) {
            addCriterion("WIN_NUM4 between", value1, value2, "winNum4");
            return (Criteria) this;
        }

        public Criteria andWinNum4NotBetween(Integer value1, Integer value2) {
            addCriterion("WIN_NUM4 not between", value1, value2, "winNum4");
            return (Criteria) this;
        }

        public Criteria andWinNum5IsNull() {
            addCriterion("WIN_NUM5 is null");
            return (Criteria) this;
        }

        public Criteria andWinNum5IsNotNull() {
            addCriterion("WIN_NUM5 is not null");
            return (Criteria) this;
        }

        public Criteria andWinNum5EqualTo(Integer value) {
            addCriterion("WIN_NUM5 =", value, "winNum5");
            return (Criteria) this;
        }

        public Criteria andWinNum5NotEqualTo(Integer value) {
            addCriterion("WIN_NUM5 <>", value, "winNum5");
            return (Criteria) this;
        }

        public Criteria andWinNum5GreaterThan(Integer value) {
            addCriterion("WIN_NUM5 >", value, "winNum5");
            return (Criteria) this;
        }

        public Criteria andWinNum5GreaterThanOrEqualTo(Integer value) {
            addCriterion("WIN_NUM5 >=", value, "winNum5");
            return (Criteria) this;
        }

        public Criteria andWinNum5LessThan(Integer value) {
            addCriterion("WIN_NUM5 <", value, "winNum5");
            return (Criteria) this;
        }

        public Criteria andWinNum5LessThanOrEqualTo(Integer value) {
            addCriterion("WIN_NUM5 <=", value, "winNum5");
            return (Criteria) this;
        }

        public Criteria andWinNum5In(List<Integer> values) {
            addCriterion("WIN_NUM5 in", values, "winNum5");
            return (Criteria) this;
        }

        public Criteria andWinNum5NotIn(List<Integer> values) {
            addCriterion("WIN_NUM5 not in", values, "winNum5");
            return (Criteria) this;
        }

        public Criteria andWinNum5Between(Integer value1, Integer value2) {
            addCriterion("WIN_NUM5 between", value1, value2, "winNum5");
            return (Criteria) this;
        }

        public Criteria andWinNum5NotBetween(Integer value1, Integer value2) {
            addCriterion("WIN_NUM5 not between", value1, value2, "winNum5");
            return (Criteria) this;
        }

        public Criteria andWinNum6IsNull() {
            addCriterion("WIN_NUM6 is null");
            return (Criteria) this;
        }

        public Criteria andWinNum6IsNotNull() {
            addCriterion("WIN_NUM6 is not null");
            return (Criteria) this;
        }

        public Criteria andWinNum6EqualTo(Integer value) {
            addCriterion("WIN_NUM6 =", value, "winNum6");
            return (Criteria) this;
        }

        public Criteria andWinNum6NotEqualTo(Integer value) {
            addCriterion("WIN_NUM6 <>", value, "winNum6");
            return (Criteria) this;
        }

        public Criteria andWinNum6GreaterThan(Integer value) {
            addCriterion("WIN_NUM6 >", value, "winNum6");
            return (Criteria) this;
        }

        public Criteria andWinNum6GreaterThanOrEqualTo(Integer value) {
            addCriterion("WIN_NUM6 >=", value, "winNum6");
            return (Criteria) this;
        }

        public Criteria andWinNum6LessThan(Integer value) {
            addCriterion("WIN_NUM6 <", value, "winNum6");
            return (Criteria) this;
        }

        public Criteria andWinNum6LessThanOrEqualTo(Integer value) {
            addCriterion("WIN_NUM6 <=", value, "winNum6");
            return (Criteria) this;
        }

        public Criteria andWinNum6In(List<Integer> values) {
            addCriterion("WIN_NUM6 in", values, "winNum6");
            return (Criteria) this;
        }

        public Criteria andWinNum6NotIn(List<Integer> values) {
            addCriterion("WIN_NUM6 not in", values, "winNum6");
            return (Criteria) this;
        }

        public Criteria andWinNum6Between(Integer value1, Integer value2) {
            addCriterion("WIN_NUM6 between", value1, value2, "winNum6");
            return (Criteria) this;
        }

        public Criteria andWinNum6NotBetween(Integer value1, Integer value2) {
            addCriterion("WIN_NUM6 not between", value1, value2, "winNum6");
            return (Criteria) this;
        }

        public Criteria andBonusNumIsNull() {
            addCriterion("BONUS_NUM is null");
            return (Criteria) this;
        }

        public Criteria andBonusNumIsNotNull() {
            addCriterion("BONUS_NUM is not null");
            return (Criteria) this;
        }

        public Criteria andBonusNumEqualTo(Integer value) {
            addCriterion("BONUS_NUM =", value, "bonusNum");
            return (Criteria) this;
        }

        public Criteria andBonusNumNotEqualTo(Integer value) {
            addCriterion("BONUS_NUM <>", value, "bonusNum");
            return (Criteria) this;
        }

        public Criteria andBonusNumGreaterThan(Integer value) {
            addCriterion("BONUS_NUM >", value, "bonusNum");
            return (Criteria) this;
        }

        public Criteria andBonusNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("BONUS_NUM >=", value, "bonusNum");
            return (Criteria) this;
        }

        public Criteria andBonusNumLessThan(Integer value) {
            addCriterion("BONUS_NUM <", value, "bonusNum");
            return (Criteria) this;
        }

        public Criteria andBonusNumLessThanOrEqualTo(Integer value) {
            addCriterion("BONUS_NUM <=", value, "bonusNum");
            return (Criteria) this;
        }

        public Criteria andBonusNumIn(List<Integer> values) {
            addCriterion("BONUS_NUM in", values, "bonusNum");
            return (Criteria) this;
        }

        public Criteria andBonusNumNotIn(List<Integer> values) {
            addCriterion("BONUS_NUM not in", values, "bonusNum");
            return (Criteria) this;
        }

        public Criteria andBonusNumBetween(Integer value1, Integer value2) {
            addCriterion("BONUS_NUM between", value1, value2, "bonusNum");
            return (Criteria) this;
        }

        public Criteria andBonusNumNotBetween(Integer value1, Integer value2) {
            addCriterion("BONUS_NUM not between", value1, value2, "bonusNum");
            return (Criteria) this;
        }

        public Criteria andInsDateIsNull() {
            addCriterion("INS_DATE is null");
            return (Criteria) this;
        }

        public Criteria andInsDateIsNotNull() {
            addCriterion("INS_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andInsDateEqualTo(String value) {
            addCriterion("INS_DATE =", value, "insDate");
            return (Criteria) this;
        }

        public Criteria andInsDateNotEqualTo(String value) {
            addCriterion("INS_DATE <>", value, "insDate");
            return (Criteria) this;
        }

        public Criteria andInsDateGreaterThan(String value) {
            addCriterion("INS_DATE >", value, "insDate");
            return (Criteria) this;
        }

        public Criteria andInsDateGreaterThanOrEqualTo(String value) {
            addCriterion("INS_DATE >=", value, "insDate");
            return (Criteria) this;
        }

        public Criteria andInsDateLessThan(String value) {
            addCriterion("INS_DATE <", value, "insDate");
            return (Criteria) this;
        }

        public Criteria andInsDateLessThanOrEqualTo(String value) {
            addCriterion("INS_DATE <=", value, "insDate");
            return (Criteria) this;
        }

        public Criteria andInsDateLike(String value) {
            addCriterion("INS_DATE like", value, "insDate");
            return (Criteria) this;
        }

        public Criteria andInsDateNotLike(String value) {
            addCriterion("INS_DATE not like", value, "insDate");
            return (Criteria) this;
        }

        public Criteria andInsDateIn(List<String> values) {
            addCriterion("INS_DATE in", values, "insDate");
            return (Criteria) this;
        }

        public Criteria andInsDateNotIn(List<String> values) {
            addCriterion("INS_DATE not in", values, "insDate");
            return (Criteria) this;
        }

        public Criteria andInsDateBetween(String value1, String value2) {
            addCriterion("INS_DATE between", value1, value2, "insDate");
            return (Criteria) this;
        }

        public Criteria andInsDateNotBetween(String value1, String value2) {
            addCriterion("INS_DATE not between", value1, value2, "insDate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lotto
     *
     * @mbggenerated do_not_delete_during_merge Fri Jul 12 15:54:40 KST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lotto
     *
     * @mbggenerated Fri Jul 12 15:54:40 KST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}